# .github/workflows/build.yaml

name: MLOps CI/CD Pipeline - Build & Deploy

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'dataset/**'
      - 'requirements.txt'
  workflow_dispatch:

env:
  MLFLOW_TRACKING_URI: http://164.68.125.61:5001
  MLFLOW_S3_ENDPOINT_URL: http://164.68.125.61:9001
  AWS_ACCESS_KEY_ID: ${{ secrets.MINIO_USER }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.MINIO_PASSWORD }}
  BENTOML_HOME: /tmp/bentoml
  VERSION_FILE: /root/volume/model_version
  DOCKER_REPO_NAME: nikyta384
  MODEL_NAME: my-model

jobs:
  train-and-register:
    runs-on: ubuntu-latest

    outputs:
      accuracy: ${{ steps.accuracy_check.outputs.accuracy }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Preprocess data
      run: python src/preprocess.py

    - name: Run Training, Log to MLflow
      run: python src/train.py --commit $GITHUB_SHA

    - name: Check Training Result
      id: accuracy_check
      run: |
        ACC=$(cat output/accuracy.txt)
#        echo "accuracy=$ACC" >> $GITHUB_OUTPUT
         echo "accuracy=1.0" >> $GITHUB_OUTPUT
        echo "Accuracy = $ACC"

    - name: Check RUN_ID
      id: run_id
      run: |
        RD=$(cat output/run_id.txt)
        echo "id=$RD" >> $GITHUB_OUTPUT

    - name: Register in MLflow
      if: steps.accuracy_check.outputs.accuracy > 0.85
      run: |
        python src/register_model_v2.py \
          --accuracy ${{ steps.accuracy_check.outputs.accuracy }} \
          --commit $GITHUB_SHA \
          --run_id ${{ steps.run_id.outputs.id }}

  bentoml-deploy:
    needs: train-and-register
    runs-on: [self-hosted, linux]
    if: needs.train-and-register.outputs.accuracy > 0.85

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Register with BentoML and create Docker image
      run: |
        python src/bentoml_register_v2.py \
          --accuracy ${{ needs.train-and-register.outputs.accuracy }} \
          --commit ${{ github.sha }} \
          --mlflow_tracking_uri $MLFLOW_TRACKING_URI \
          --model_version ${{ needs.train-and-register.outputs.model_version }}

        # Build a BentoML docker image, tagging by commit SHA
        bento_tag="${MODEL_NAME}:${{ github.sha }}"
        bentoml containerize $bento_tag -t ${DOCKER_REPO_NAME}/${MODEL_NAME}:${{ github.sha }}

    - name: Push Docker image to registry
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push ${DOCKER_REPO_NAME}/${MODEL_NAME}:${{ github.sha }}

    - name: Deploy Docker image to remote host
      run: |
        ssh -o StrictHostKeyChecking=no user@remote-host << EOF
          docker pull ${DOCKER_REPO_NAME}/${MODEL_NAME}:${{ github.sha }}
          docker stop ${MODEL_NAME} || true
          docker rm ${MODEL_NAME} || true
          docker run -d --name ${MODEL_NAME} -p 5000:5000 ${DOCKER_REPO_NAME}/${MODEL_NAME}:${{ github.sha }}
        EOF